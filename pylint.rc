[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=no

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

# Use multiple processes to speed up Pylint.
jobs=1

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

# Allow optimization of some AST trees. This will activate a peephole AST
# optimizer, which will apply various small optimizations. For instance, it can
# be used to obtain the result of joining multiple strings with the addition
# operator. Joining a lot of strings can lead to a maximum recursion error in
# Pylint and this flag can prevent that. It has one side effect, the resulting
# AST will be different than the one from reality.
optimize-ast=no


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
enable=W0221,E1102,E1101,E0112,E0113,E0110,E0111,E0114,E0115,W0201,W1609,W1608,W1607,W1606,W1605,W1604,W1603,W1602,W1601,E1304,E0001,W0631,E1305,E1133,E1132,E1131,E1130,E0602,E1136,E1135,E1134,W0105,E0117,W1618,W1619,W1610,W1611,W1612,W1613,W1614,W1615,W1616,W1617,E0211,E0213,E0604,W1001,W0622,W0623,W0101,W0621,W0705,E0632,W0232,E1129,E1124,E1125,E1126,E1127,E1120,E1121,W0141,E1123,W1300,W1505,W1501,E1111,W0512,W0613,E0202,E1128,W0711,E1701,W0301,W0612,W0611,W0120,E1205,W0401,E0603,W1302,W1303,W0124,E1206,W1306,W1307,W1304,W1305,W0150,E1201,E1200,W0601,W0602,W0603,E0239,E0238,E0237,E0236,W0311,W0212,W0211,W1401,E1310,W1503,E0116,W0108,W0125,W0406,W0404,W0402,W0403,W1640,W1402,E0302,E0301,E1004,E1003,E1002,E1001,W0332,W1202,W1201,W0604,W0410,W0231,W0233,W0110,W0109,W0703,W0702,E1700,E0012,E0011,E0704,E0703,E0702,E0701,E1609,E1608,W1502,W0312,E1601,E1603,E1602,E1605,E1604,E1607,E1606,W1621,W1620,W1623,W1622,W1625,W1624,W1627,W1626,W1629,W1628,E0633,W1301,W0102,W0107,E0601,W0710,W0106,E1306,E1300,E1301,E1302,E1303,E0710,E0711,E0712,W0104,E0240,E0241,E0108,W0123,E0203,E0101,E0100,E0103,E0102,E0105,E0104,E0107,E0106,W1632,W1633,W1630,W1636,W1637,W1634,W1635,W0640,W1638,W1639,W0122,W0199,W0511,E0611,W0614,W0222,E0401,W0223

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
disable=arguments-differ,not-callable,no-member,too-many-star-expressions,invalid-star-assignment-target,abstract-class-instantiated,bad-reversed-sequence,invalid-name,blacklisted-name,star-needs-assignment-target,nonlocal-and-global,attribute-defined-outside-init,unexpected-line-ending-format,raw_input-builtin,long-builtin,file-builtin,execfile-builtin,coerce-builtin,cmp-builtin,buffer-builtin,basestring-builtin,apply-builtin,missing-format-string-key,syntax-error,undefined-loop-variable,too-many-format-args,cyclic-import,not-an-iterable,repeated-keyword,unsupported-binary-operation,invalid-unary-operand-type,undefined-variable,unsubscriptable-object,unsupported-membership-test,not-a-mapping,missing-docstring,empty-docstring,unneeded-not,pointless-string-statement,nonlocal-without-binding,no-absolute-import,old-division,reduce-builtin,standarderror-builtin,unicode-builtin,xrange-builtin,coerce-method,delslice-method,getslice-method,setslice-method,no-method-argument,no-self-argument,invalid-all-object,property-on-old-class,redefined-builtin,redefine-in-handler,unreachable,redefined-outer-name,duplicate-except,bad-mcs-classmethod-argument,unbalanced-tuple-unpacking,no-init,consider-using-enumerate,not-context-manager,bad-classmethod-argument,bad-mcs-method-argument,redundant-keyword-arg,missing-kwoa,invalid-sequence-index,invalid-slice-index,no-value-for-parameter,too-many-function-args,bad-builtin,unexpected-keyword-arg,bad-format-string-key,deprecated-method,method-check-failed,deprecated-pragma,bad-open-mode,suppressed-message,useless-suppression,assignment-from-no-return,invalid-encoded-data,unused-argument,method-hidden,wrong-import-order,assignment-from-none,too-many-boolean-expressions,too-many-return-statements,binary-op-exception,too-many-arguments,not-async-context-manager,unnecessary-semicolon,unused-variable,unused-import,useless-else-on-loop,logging-too-many-args,wildcard-import,duplicate-code,too-many-statements,undefined-all-variable,bad-format-string,missing-format-argument-key,confusing-with-statement,logging-too-few-args,missing-format-attribute,invalid-format-index,unused-format-string-argument,format-combined-specification,lost-exception,logging-format-truncated,logging-unsupported-format,file-ignored,locally-enabled,locally-disabled,bad-inline-option,global-variable-undefined,global-variable-not-assigned,global-statement,too-many-locals,old-style-class,astroid-error,fatal,too-many-instance-attributes,too-few-public-methods,inherit-non-class,invalid-slots,assigning-non-slot,invalid-slots-object,bad-indentation,protected-access,singleton-comparison,no-self-use,bad-staticmethod-argument,no-staticmethod-decorator,no-classmethod-decorator,anomalous-backslash-in-string,bad-str-strip-call,redundant-unittest-assert,continue-in-finally,unnecessary-lambda,using-constant-test,missing-final-newline,line-too-long,raw-checker-failed,trailing-whitespace,too-many-lines,import-self,reimported,deprecated-module,relative-import,redefined-variable-type,using-cmp-argument,parse-error,anomalous-unicode-escape-in-string,too-many-branches,unexpected-special-method-signature,non-iterator-returned,missing-super-argument,bad-super-call,super-on-old-class,slots-on-old-class,too-many-public-methods,lowercase-l-suffix,logging-format-interpolation,logging-not-lazy,global-at-module-level,misplaced-future,super-init-not-called,non-parent-init-called,too-many-ancestors,deprecated-lambda,duplicate-key,broad-except,bare-except,yield-inside-async-function,multiple-imports,wrong-import-position,ungrouped-imports,bad-option-value,unrecognized-inline-option,misplaced-bare-raise,bad-exception-context,raising-bad-type,bad-except-order,import-star-module-level,old-octal-literal,unidiomatic-typecheck,misplaced-comparison-constant,boolean-datetime,mixed-indentation,print-statement,unpacking-in-except,parameter-unpacking,backtick,old-raise-syntax,old-ne-operator,long-suffix,dict-view-method,dict-iter-method,metaclass-assignment,next-method-called,raising-string,indexing-exception,oct-method,reload-builtin,nonzero-method,hex-method,multiple-statements,mixed-line-endings,bad-whitespace,superfluous-parens,unpacking-non-sequence,unused-format-string-key,dangerous-default-value,unnecessary-pass,used-before-assignment,nonstandard-exception,expression-not-assigned,wrong-spelling-in-docstring,invalid-characters-in-docstring,too-few-format-args,wrong-spelling-in-comment,bad-format-character,truncated-format-string,mixed-format-string,format-needs-mapping,raising-non-exception,notimplemented-raised,catching-non-exception,pointless-statement,inconsistent-mro,duplicate-bases,duplicate-argument-name,eval-used,bad-continuation,access-member-before-definition,return-in-init,init-is-generator,not-in-loop,function-redefined,yield-outside-function,return-outside-function,nonexistent-operator,return-arg-in-generator,input-builtin,round-builtin,cmp-method,map-builtin-not-iterating,zip-builtin-not-iterating,intern-builtin,unichr-builtin,cell-var-from-loop,range-builtin-not-iterating,filter-builtin-not-iterating,exec-used,assert-on-tuple,fixme,no-name-in-module,unused-wildcard-import,signature-differs,import-error,abstract-method,simplifiable-if-statement,too-many-nested-blocks


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[BASIC]

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,input

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for attribute names
attr-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for argument names
argument-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for method names
method-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# Number of spaces of indent required inside a hanging  or continued line.
indent-after-paren=4

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=


[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[SPELLING]

# Spelling dictionary name. Available dictionaries: none. To make it working
# install python-enchant package.
spelling-dict=

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set). This supports can work
# with qualified names.
ignored-classes=

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=_$|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of boolean expressions in a if statement
max-bool-expr=5


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
